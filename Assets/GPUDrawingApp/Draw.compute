#pragma kernel Update
#pragma kernel InitBackground

RWTexture2D<float4> _Result;
float4 _PreviousMousePosition;
float4 _MousePosition;
float _StrokeSmoothingInterval;
bool _MouseDown;
float _BrushSize;
float4 _BrushColour;
float4 _BackgroundColour;

float4 HardBrush(float2 pos, float4 currentColor, float4 brushColor)
{
    for (float i = 0; i < 1.0; i += _StrokeSmoothingInterval)
    {
        const float2 mousePos = lerp(_PreviousMousePosition.xy, _MousePosition.xy, i);
        if (length(pos - mousePos) < _BrushSize)
            return brushColor;
    }

    return currentColor;
}

/*
float4 SoftBrush(float2 pos, float4 currentColour, float4 brushColour)
{
    const float l = clamp(length(pos - _MousePosition.xy) / _BrushSize, 0.0, 1.0);
    return lerp(currentColour, brushColour, 1.0 - l);
}
*/

[numthreads(8,8,1)]
void InitBackground(uint3 id : SV_DispatchThreadID)
{
    _Result[id.xy] = _BackgroundColour;
}

[numthreads(8,8,1)]
void Update(uint3 id : SV_DispatchThreadID)
{
    if (!_MouseDown) return;
    _Result[id.xy] = HardBrush(id.xy, _Result[id.xy], _BrushColour);
}
